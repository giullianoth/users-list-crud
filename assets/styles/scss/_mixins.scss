// CONTAINER WIDTH
@mixin container($maxWidth: $container-max-width) {
    max-width: $maxWidth;
    margin: 0 auto;
    padding: 0 20px;
}

@mixin containerFull() {
    width: 100%;
}

// BROWSERS
@mixin setBrowsers($attr, $value, $browsers: $browsers-default) {
    #{$attr}: #{$value};

    @each $browser in $browsers {
        -#{$browser}-#{$attr}: #{$value};
    }
}

// BORDER RADIUS
@mixin borderRadius($radius: $radius-default) {
    @include setBrowsers(border-radius, $radius);
}

@mixin rounded() {
    @include borderRadius(100%);
}

// FLEXBOX
@mixin flex($justifyContent: center, $alignitems: center, $flexWrap: wrap) {
    display: flex;
    justify-content: $justifyContent;
    align-items: $alignitems;
    flex-wrap: $flexWrap;
}

@mixin flexBasis($basis, $gap: 0) {
    @if $gap !=0 {
        flex-basis: calc($basis - $gap);
    }

    @else {
        flex-basis: $basis;
    }
}

@mixin flex1($gap: 0) {
    @include flexBasis(100%, $gap);
}

@mixin flex2($gap: 0) {
    @include flexBasis(calc(100% / 2), $gap);
}

@mixin flex3($gap: 0) {
    @include flexBasis(calc(100% / 3), $gap);
}

@mixin flex4($gap: 0) {
    @include flexBasis(calc(100% / 4), $gap);
}

// TRANSITION
@mixin transition($property: all, $duration: 0.4s, $timingFunction: ease, $delay: 0s) {
    transition: $property $duration $timingFunction $delay;
}

// POSITION
// Relative
@mixin relative() {
    position: relative;
}

// Absolute
@mixin absolute($top: 0, $left: 0) {
    position: absolute;
    top: $top;
    left: $left;
}

// Fixed
@mixin fixed($top: 0, $left: 0) {
    position: fixed;
    top: $top;
    left: $left;
}

// BUTTON
@mixin button() {
    display: inline-block;
    border: none;
    background-color: $color-primary-blue-1;
    color: $color-white;
    font-family: inherit;
    font-size: $font-size-small;
    padding: 12px 24px;
    cursor: pointer;

    @include borderRadius;
    @include transition;

    &:hover {
        background-color: $color-primary-blue-1-hover;
    }

    i {
        margin-right: 10px;
    }
}

// BACKGROUND IMAGE
@mixin bgImage($image: "", $repeat: no-repeat, $size: cover, $position: center center) {
    @if $image != "" {
        background-image: url($image);
    }

    background-repeat: $repeat;
    background-size: $size;
    background-position: $position;
}

// RESPONSIVE DESIGN - Mobile First
@mixin setResponsiveDesign($screenWidth) {
    @media screen and (min-width: $screenWidth) {
        @content;
    }
}